<h3>Successfully Adopting Pair Programming</h3>
<p>
<a href='http://www.infoq.com/articles/adopting-pair-programming'>Successfully Adopting Pair Programming</a><br/>
I take a look at pair programming from an adoption perspective. This article is for you if you already know what pair programming is and guidance on how to get to the point of successfully practicing pair programming. I go over everything from an optimal seating arrangement, to effective coaching techniques, to calling out common mistakes to avoid.</p>
<br/>
<h3>The 5Ws of DSLs</h3>
<p>
<a href='http://www.infoq.com/presentations/5W-of-DSL'>The 5Ws of DSLs</a><br/>
This presentation recorded at QCon SF 2008 represents an introduction to Domain Specific Languages. Jay Fields responds to the following 5 questions of DSLs: What, Who, Where, When, and Why?</p>
<br/>
<h3>Testing Dynamic Web Applications</h3>
<p>
<a href='http://css.dzone.com/news/testing-dynamic-web-applicatio'>Available on Web Builder Zone</a><br/>
At RailsConf Europe, in the Q & A portion of my talk on Functional Testing someone asked what I recommend for testing Javascript. Ugh. Testing Javascript. Is it possible to recommend something when everything you've seen is terrible?</p>
<br/>
<h3>User Story Estimation Techniques</h3>
<p>
<a href='http://www.infoq.com/articles/agile-estimation-techniques'>Available on InfoQ</a><br/>
One of the great things about working as a consultant is the ability to try out many different ideas and adapting your personal favorite process to include things that work. This article gives the details about user story estimation techniques that I've found effective.</p>
<br/>
<h3>Business Natural Languages Development in Ruby</h3>
<p>
<a href='http://www.infoq.com/presentations/fields-business-natural-languages-ruby'>Available on InfoQ</a><br/>
Jay Fields presents his concept of Business Natural Languages (BNL). BNLs are a type of Domain Specific Language, designed to be readable by any subject matter expert, which allows to create maintainable specifications and documentation. The example language is shown using Ruby.</p>
<br/>
<h3>Duplicate Code in Your Tests</h3>
<p>
<a href='http://architects.dzone.com/news/testing-duplicate-code-your-te'>Available on Architect Zone</a><br/>
Sadly, DRY has become a philosophy that is dogmatically and blindly applied to every aspect of programming. I'm a big fan of firing silver bullets but if you go that path your number one priority needs to be finding where a solution does not fit. In fact, those who have applied DRY excessively have found that there are situations when DRY may not be advantageous.</p>
<br/>
<h3>Software Development Lessons Learned From Poker</h3>
<p>
<a href='http://www.infoq.com/articles/fields-it-depends'>Available on InfoQ</a><br>
I wasn't always a software developer. The two years before I joined ThoughtWorks I lived primarily off playing poker. Of course, if you've ever asked me about the tattoo on my forearm, you've already heard the story. If you haven't, feel free to ask me next time we get a drink together.</p>
<p>I've never regretted spending so much time playing poker. I believe it taught me quite a few lessons that apply widely to other topics. In fact the more I develop software the more I'm convinced that the two jobs are incredibly similar...
</p>
<br/>
<h3>Evaluation Options in Ruby</h3>
<p>
<a href='http://www.infoq.com/articles/eval-options-in-ruby'>Available on InfoQ</a><br>
One of my favorite features of Ruby is the ability to evaluate a string or a block of code. Ruby provides a few different types of evaluation options; however, the evals I use most often are: eval, instance_eval, and class_eval...
</p>
<br/>
<h3>Jay Fields and Zak Tamsen on Domain Specific Languages</h3>
<p>
<a href='http://www.infoq.com/interviews/jay-fields-zak-tamsen-on-dsls'>Available on InfoQ</a><br>
Jay Fields and Zak Tamsen have successfully worked with non-technical domain experts to design Domain Specific Languages for some of their projects at ThoughtWorks. In this interview with InfoQ they describe their motivations for using DSLs, and describe how they can be used to empower the business, reduce development time, and increase the agility of projects.
</p>